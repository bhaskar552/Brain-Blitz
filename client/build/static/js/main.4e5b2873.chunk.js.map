{"version":3,"sources":["context/auth/authContext.js","components/layouts/Navbar.js","context/history/historyContext.js","components/pages/Home.js","components/pages/Signin.js","components/pages/Register.js","components/cards/CardItem.js","components/cards/Cards.js","components/pages/Game.js","components/routing/privateRoute.js","context/types.js","context/history/historyReducer.js","context/history/HistoryState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","App.js","index.js"],"names":["authContext","createContext","Navbar","useContext","AuthContext","isAuthenticated","logout","user","authLinks","_jsxs","Fragment","children","name","_jsx","onClick","Link","to","guestLinks","className","href","id","historyContext","Home","HistoryContext","games","updateCurrentLevel","updateCurrentTheme","getGames","_useState","useState","_useState2","_slicedToArray","chosenTheme","setChosenTheme","useEffect","loadUser","window","M","AutoInit","getAvg","data","gameArr","filter","game","gameLevel","map","numOfMoves","length","Math","floor","reduce","a","b","e","target","handleClick","loading","tabIndex","Signin","props","login","error","clearErrors","email","password","setUser","history","push","alert","onChange","_objectSpread","_defineProperty","value","autoComplete","onSubmit","preventDefault","type","required","htmlFor","Register","register","CardItem","_ref","imageId","shownCards","cardClicked","source","show","setShow","buff","includes","imgid","style","backgroundColor","pointerEvents","alt","src","concat","visibility","Cards","updateActive","updateNumOfMoves","currentLevel","currentTheme","updateNewGame","images","setImages","_useState3","_useState4","setShownCards","_useState5","_useState6","currCards","setCurrCards","_useState7","_useState8","disableClick","setDisableClick","_useState9","_useState10","count","setCount","number","buffer","i","temp","sort","random","curId","curImgId","cardDiv","parseInt","getAttribute","_toConsumableArray","setTimeout","date","Date","now","shownCardsTempArr","splice","noClicking","console","log","maxWidth","image","index","Game","addNewGame","active","setActive","curNumOfMoves","setCurNumOfMoves","newGame","setNewGame","PrivateRoute","Component","component","rest","_objectWithoutProperties","_excluded","Route","render","Redirect","UPDATE_CURRENT_LEVEL","UPDATE_CURRENT_THEME","ADD_NEW_GAME","GAME_ERROR","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","GET_GAMES","historyReducer","state","action","payload","HistoryState","_useReducer","useReducer","_useReducer2","dispatch","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","t0","response","msg","stop","apply","arguments","_ref2","_callee2","config","_context2","header","post","_x","Provider","level","theme","authReducer","localStorage","setItem","token","removeItem","setAuthToken","defaults","headers","common","AuthState","initialState","getItem","formData","_ref3","_callee3","_context3","_x2","App","Router","Switch","exact","path","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e5b2873.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Navbar = () => {\r\n  // declare and destructure authcontext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { isAuthenticated, logout, user } = authContext;\r\n\r\n  // logout user\r\n  const onLogOut = () => {\r\n    logout();\r\n  };\r\n\r\n  // fragment displays of user signed in\r\n  const authLinks = (\r\n    <Fragment>\r\n      <li>Hello, {user && user.name}!</li>\r\n      <li onClick={onLogOut}>\r\n        <Link to='/signin'>Sign Out</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  // fragment displays if user is not signed in\r\n  const guestLinks = (\r\n    <Fragment>\r\n      <li>\r\n        <Link to='/register'>Register</Link>\r\n      </li>\r\n      <li>\r\n        <Link to='/signin'>Sign In</Link>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    // materializeCSS navbar\r\n    <nav>\r\n      <div className='nav-wrapper'>\r\n        <a href='/' className='brand-logo left'>\r\n          <i className='material-icons'>memory</i>\r\n            Brain Blitz\r\n        </a>\r\n        {/* check if user signed in or not */}\r\n        <ul id='nav-mobile' className='right'>\r\n          {isAuthenticated ? authLinks : guestLinks}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { createContext } from 'react';\r\n\r\nconst historyContext = createContext();\r\n\r\nexport default historyContext;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryContext from '../../context/history/historyContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst Home = () => {\r\n  // declare authContext, declare and destructure historyContext\r\n  const historyContext = useContext(HistoryContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { games, updateCurrentLevel, updateCurrentTheme, getGames } =\r\n    historyContext;\r\n\r\n  // declare component level state\r\n  const [chosenTheme, setChosenTheme] = useState('');\r\n\r\n  // load user and get data from backend\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    getGames();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // enable materialize dropdown functionality\r\n  useEffect(() => {\r\n    window.M.AutoInit();\r\n  });\r\n\r\n  // calculate average moves\r\n  const getAvg = (data) => {\r\n    // filter games data based on difficulty level\r\n    const gameArr = data[0]\r\n      .filter((game) => game.gameLevel === data[1])\r\n      .map((game) => game.numOfMoves);\r\n\r\n    // return avg moves or message\r\n    if (gameArr.length > 0) {\r\n      return Math.floor(gameArr.reduce((a, b) => a + b) / gameArr.length);\r\n    } else {\r\n      return 'No games played';\r\n    }\r\n  };\r\n\r\n  // store current level\r\n  const onClick = (e) => {\r\n    updateCurrentLevel(e.target.name);\r\n  };\r\n\r\n  // store current theme\r\n  const handleClick = (e) => {\r\n    updateCurrentTheme(e.target.name);\r\n    setChosenTheme(e.target.name);\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    // prevent view if page still loading\r\n    !authContext.loading && (\r\n      <div className='row container'>\r\n        <div className='col s12'>\r\n          <div className='card blue-grey darken-1 large'>\r\n            <div className='card-content white-text'>\r\n              <span className='center card-title hide-on-small-only'>\r\n                You have played {games.length}{' '}\r\n                {games.length === 1 ? 'game' : 'games'} so far!\r\n              </span>\r\n              <span className='center card-title hide-on-med-and-up'>\r\n                {games.length} {games.length === 1 ? 'Game ' : 'Games '}\r\n                Played!\r\n              </span>\r\n              <br></br>\r\n              <span className='center card-title hide-on-small-only'>\r\n                Your Average Number of Moves:\r\n              </span>\r\n              <span className='center card-title hide-on-med-and-up'>\r\n                Average Moves:\r\n              </span>\r\n              <br></br>\r\n              <div className='row col s12'>\r\n                <div className='col s4 center'>\r\n                  <u>Easy</u>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <u>Medium</u>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <u>Hard</u>\r\n                </div>\r\n              </div>\r\n              <div className='row col s12'>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'beginner'])}</p>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'intermediate'])}</p>\r\n                </div>\r\n                <div className='col s4 center'>\r\n                  <p>{getAvg([games, 'expert'])}</p>\r\n                </div>\r\n              </div>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <span className='center card-title'>Start A New Game Below!</span>\r\n            </div>\r\n            <div className='row center-align'>\r\n              <a\r\n                className='dropdown-trigger btn blue-grey darken-1'\r\n                href='#'\r\n                data-target='dropdown1'\r\n              >\r\n                {chosenTheme.length > 0 ? chosenTheme : 'Choose A Theme!'}\r\n              </a>\r\n              <ul id='dropdown1' className='dropdown-content'>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='robots'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Robots\r\n                  </a>\r\n                </li>\r\n                <li className='divider' tabIndex='-1'></li>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='cats'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Cats\r\n                  </a>\r\n                </li>\r\n                <li className='divider' tabIndex='-1'></li>\r\n                <li>\r\n                  <a\r\n                    href='#'\r\n                    onClick={handleClick}\r\n                    name='monsters'\r\n                    className='blue-grey-text text-darken-1'\r\n                  >\r\n                    Monsters\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <div className='col s12 card-action'>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='beginner'\r\n                  onClick={onClick}\r\n                >\r\n                  Easy\r\n                </Link>\r\n              </div>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='intermediate'\r\n                  onClick={onClick}\r\n                >\r\n                  <span className='hide-on-small-only'>Medium</span>\r\n                  <span className='hide-on-med-and-up'>Med</span>\r\n                </Link>\r\n              </div>\r\n              <div className='col s4 center'>\r\n                <Link\r\n                  to='/game'\r\n                  className='waves-effect waves-red btn-flat'\r\n                  name='expert'\r\n                  onClick={onClick}\r\n                >\r\n                  Hard\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n// bring in props, declare authContext and destructure\r\nconst Signin = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { login, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  // declare state and desstructure\r\n  const [user, setUser] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = user;\r\n\r\n  useEffect(() => {\r\n    // if user is signed in, go to homepage\r\n    if (isAuthenticated) {\r\n      props.history.push('/');\r\n    }\r\n\r\n    // send err msg if user not recognized\r\n    if (error === 'invalid credentials') {\r\n      alert(error);\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  // store user input on change\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  // call login with user info on form submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login({\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // materializeCSS form\r\n    <div className='container form-container'>\r\n      <div className='row'>\r\n        <form className='col s6' autoComplete='off' onSubmit={onSubmit}>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='email'\r\n                type='text'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              ></input>\r\n              <label htmlFor='email'>Email</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              ></input>\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <button\r\n              className='btn waves-effect waves-light red lighten-2 col s9 m5 offset-s8 offset-m10'\r\n              type='submit'\r\n              name='action'\r\n            >\r\n              Sign In\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\n// bring in props\r\nconst Register = (props) => {\r\n  // declare and destructure authContext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { register, error, clearErrors, isAuthenticated } = authContext;\r\n\r\n  // declare and destructure component level state\r\n  const [user, setUser] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { name, email, password } = user;\r\n\r\n  // if user is signed in, go to homepage\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      props.history.push('/');\r\n    }\r\n\r\n    // if errors, alert user and clear errors\r\n    if (error === 'Email already exists') {\r\n      alert(error);\r\n      clearErrors();\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [error, isAuthenticated, props.history]);\r\n\r\n  // store user input on change\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  // register user with input object on form submit\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    register({\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n  };\r\n\r\n  return (\r\n    // materialize CSS form\r\n    <div className='container form-container'>\r\n      <div className='row'>\r\n        <form className='col s6' onSubmit={onSubmit}>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='name'\r\n                type='text'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='user-name'>Username</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='email'\r\n                type='email'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='email'>Email</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <div className='input-field col s9 offset-s8'>\r\n              <input\r\n                id='password'\r\n                type='password'\r\n                className='validate'\r\n                onChange={onChange}\r\n                required\r\n              />\r\n              <label htmlFor='password'>Password</label>\r\n            </div>\r\n          </div>\r\n          <div className='row'>\r\n            <button\r\n              className='btn waves-effect waves-light red lighten-2 col s9 m5 offset-s8 offset-m10'\r\n              type='submit'\r\n              name='action'\r\n            >\r\n              Register\r\n              <i className='material-icons right'>send</i>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n// bring in props\r\nconst CardItem = ({ id, imageId, shownCards, cardClicked, source }) => {\r\n    // set state\r\n    const [show, setShow] = useState(false);\r\n\r\n    // check if cardItem should be displayed, display if so\r\n    useEffect(() => {\r\n        let buff = shownCards.includes(id);\r\n        setShow(buff);\r\n        // eslint-disable-next-line\r\n    }, [shownCards]);\r\n\r\n    // call cardClicked with card div\r\n    const onClick = (e) => {\r\n        cardClicked(e.target);\r\n    };\r\n\r\n    return (\r\n        // materializeCSS card\r\n        <div\r\n            id={id}\r\n            imgid={imageId}\r\n            className='mem-card'\r\n            // show card img and disable click if necessary\r\n            style={{\r\n                backgroundColor: show ? '#D3D3D3' : null,\r\n                pointerEvents: show ? 'none' : 'auto',\r\n            }}\r\n            onClick={onClick}\r\n        >\r\n            <img\r\n                id={id}\r\n                imgid={imageId}\r\n                alt='card-figure'\r\n                // get image from robohash\r\n                src={`https://robohash.org/${imageId}` + source}\r\n                // hide image if necesarry\r\n                style={{ visibility: !show ? 'hidden' : 'visible' }}\r\n            ></img>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { useState, useEffect } from 'react';\r\nimport CardItem from './CardItem';\r\n\r\n// declare props and initial state\r\nconst Cards = ({\r\n                   updateActive,\r\n                   updateNumOfMoves,\r\n                   currentLevel,\r\n                   currentTheme,\r\n                   updateNewGame,\r\n               }) => {\r\n    const [images, setImages] = useState([]);\r\n    const [shownCards, setShownCards] = useState([]);\r\n    const [currCards, setCurrCards] = useState([]);\r\n    const [disableClick, setDisableClick] = useState(false);\r\n    const [count, setCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        // declare number of cards based on level\r\n        let number;\r\n        switch (currentLevel) {\r\n            case 'beginner':\r\n                number = 12;\r\n                break;\r\n            case 'intermediate':\r\n                number = 20;\r\n                break;\r\n            case 'expert':\r\n                number = 30;\r\n                break;\r\n            default:\r\n                number = 12;\r\n        }\r\n\r\n        // declare array with integers up to 'number', repeated once, and then randomize\r\n        let buffer = [];\r\n        for (let i = 1; i <= number; i++) {\r\n            let temp;\r\n            if (i <= number / 2) {\r\n                temp = i;\r\n            } else {\r\n                temp = i - number / 2;\r\n            }\r\n            buffer.push({ id: temp });\r\n        }\r\n\r\n        buffer.sort((a, b) => {\r\n            return 0.5 - Math.random();\r\n        });\r\n\r\n        // save random int array to state\r\n        setImages(buffer);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    // declare variables\r\n    let curId = 0;\r\n    let curImgId = 0;\r\n\r\n    // declare source based on user's chosen theme for robohash api\r\n    let source;\r\n    switch (currentTheme) {\r\n        case 'robots':\r\n            source = '?set=set1';\r\n            break;\r\n        case 'cats':\r\n            source = '?set=set4';\r\n            break;\r\n        case 'monsters':\r\n            source = '?set=set2';\r\n            break;\r\n        default:\r\n            source = '?set=set1';\r\n    }\r\n\r\n    // handle cards clicked\r\n    const cardClicked = (cardDiv) => {\r\n        // delcare imgId and div id\r\n        curImgId = parseInt(cardDiv.getAttribute('imgid'));\r\n        curId = parseInt(cardDiv.id);\r\n        // if card is first clicked in pair, store values\r\n        if (currCards.length === 0) {\r\n            setCurrCards((currCards) => [...currCards, curImgId]);\r\n            setShownCards((shownCards) => [...shownCards, curId]);\r\n            // runs if card second clicked in pair\r\n        } else {\r\n            // increase count state by 1\r\n            setCount(count + 1);\r\n            // if cards match, store second card and clear currCards state\r\n            if (currCards.includes(curImgId)) {\r\n                setShownCards((shownCards) => [...shownCards, curId]);\r\n                setCurrCards([]);\r\n                // runs if all cards found\r\n                if (shownCards.length === images.length - 1) {\r\n                    // store number of moves, pass game object to updateNewGame function\r\n                    updateNumOfMoves(count);\r\n                    setTimeout(() => {\r\n                        updateNewGame({\r\n                            gameLevel: currentLevel,\r\n                            numOfMoves: count,\r\n                            date: Date.now(),\r\n                        });\r\n                        updateActive();\r\n                    }, 1000);\r\n                }\r\n                // runs if second card does not match firs card\r\n            } else {\r\n                // disable click, show second card, clear current cards\r\n                setDisableClick(true);\r\n                setShownCards((shownCards) => [...shownCards, curId]);\r\n                setCurrCards([]);\r\n                // after 2 seconds, flip last two cards back over and enable clicking\r\n                setTimeout(() => {\r\n                    let shownCardsTempArr = [...shownCards];\r\n                    shownCardsTempArr.splice(-1, 1);\r\n                    setShownCards(shownCardsTempArr);\r\n                    setDisableClick(false);\r\n                }, 2000);\r\n            }\r\n        }\r\n    };\r\n\r\n    // log message if shown card clicked\r\n    const noClicking = () => {\r\n        console.log('nope!');\r\n    };\r\n\r\n    return (\r\n        // materializeCSS card\r\n        <div\r\n            className='mem-cards-container'\r\n            // set width for number of cards\r\n            style={{\r\n                maxWidth:\r\n                    currentLevel === 'beginner'\r\n                        ? '500px'\r\n                        : currentLevel === 'intermediate'\r\n                            ? '600px'\r\n                            : '700px',\r\n            }}\r\n        >\r\n            {images.map((image, index) => (\r\n                <CardItem\r\n                    key={index}\r\n                    id={index}\r\n                    imageId={image.id}\r\n                    shownCards={shownCards}\r\n                    cardClicked={disableClick ? noClicking : cardClicked}\r\n                    source={source}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","import React, { useState, useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport HistoryContext from '../../context/history/historyContext';\r\nimport AuthContext from '../../context/auth/authContext';\r\nimport Cards from '../cards/Cards';\r\n\r\nconst Game = () => {\r\n  // declare historyContext, authContext, destructure historyContext\r\n  const historyContext = useContext(HistoryContext);\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const { currentLevel, currentTheme, addNewGame } = historyContext;\r\n\r\n  // delcare component state\r\n  const [active, setActive] = useState(true);\r\n  const [curNumOfMoves, setCurNumOfMoves] = useState(0);\r\n  const [newGame, setNewGame] = useState({\r\n    gameLevel: '',\r\n    numOfMoves: 0,\r\n    date: Date.now(),\r\n  });\r\n\r\n  // authenticate user if game page is loaded\r\n  useEffect(() => {\r\n    authContext.loadUser();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // change active state boolean\r\n  const updateActive = () => {\r\n    let cur = active;\r\n    setActive(!cur);\r\n  };\r\n\r\n  // store current number of moves\r\n  const updateCurNumOfMoves = (count) => {\r\n    setCurNumOfMoves(count);\r\n  };\r\n\r\n  // store newGame object\r\n  const updateNewGame = (newGame) => {\r\n    setNewGame(newGame);\r\n  };\r\n\r\n  // add new game object to context and database\r\n  const onClick = (e) => {\r\n    addNewGame(newGame);\r\n  };\r\n\r\n  return (\r\n    // materializeCSS card\r\n    // prevent view if page loading\r\n    !authContext.loading && (\r\n      <div className='game-board'>\r\n        {/* show game cards if active state true */}\r\n        {active ? (\r\n          <Cards\r\n            updateActive={updateActive}\r\n            updateNumOfMoves={updateCurNumOfMoves}\r\n            currentLevel={currentLevel}\r\n            currentTheme={currentTheme}\r\n            updateNewGame={updateNewGame}\r\n          />\r\n        ) : (\r\n          // show congratulations card if game not active\r\n          <div className='row container'>\r\n            <div className='col s12'>\r\n              <div className='card blue-grey darken-1 small'>\r\n                <div className='card-content white-text'>\r\n                  <span className='center card-title'>Congratulations!</span>\r\n                  <br></br>\r\n                  <span className='center card-title'>\r\n                    You won in {curNumOfMoves} moves!\r\n                  </span>\r\n                  <br></br>\r\n                  <div className='col s12 card-action'>\r\n                    <div className='col s12 center'>\r\n                      <Link\r\n                        to='/'\r\n                        className='waves-effect waves-red btn-flat'\r\n                        onClick={onClick}\r\n                      >\r\n                        End Game\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthContext from '../../context/auth/authContext';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  // declare authcontext\r\n  const authContext = useContext(AuthContext);\r\n\r\n  // destructure variables\r\n  const { isAuthenticated, loading } = authContext;\r\n\r\n  // if user authenticated, allow access to private routes\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !isAuthenticated && !loading ? (\r\n          <Redirect to='/signin' />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export const UPDATE_CURRENT_LEVEL = 'UPDATE_CURRENT_LEVEL';\r\nexport const UPDATE_CURRENT_THEME = 'UPDATE_CURRENT_THEME';\r\nexport const ADD_NEW_GAME = 'ADD_NEW_GAME';\r\nexport const GAME_ERROR = 'GAME_ERROR';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const GET_GAMES = 'GET_GAMES';\r\n","import {\r\n    UPDATE_CURRENT_LEVEL,\r\n    UPDATE_CURRENT_THEME,\r\n    ADD_NEW_GAME,\r\n    GAME_ERROR,\r\n    GET_GAMES,\r\n} from '../types';\r\n\r\n// historyReducer returns object state based on the type passed in using a switch\r\nconst historyReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case GET_GAMES:\r\n            return {\r\n                ...state,\r\n                games: action.payload,\r\n            };\r\n        case UPDATE_CURRENT_LEVEL:\r\n            return {\r\n                ...state,\r\n                currentLevel: action.payload,\r\n            };\r\n        case UPDATE_CURRENT_THEME:\r\n            return {\r\n                ...state,\r\n                currentTheme: action.payload,\r\n            };\r\n        case ADD_NEW_GAME:\r\n            return {\r\n                ...state,\r\n                games: [...state.games, action.payload],\r\n            };\r\n        case GAME_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default historyReducer;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport HistoryContext from './historyContext';\r\nimport historyReducer from './historyReducer';\r\nimport {\r\n    ADD_NEW_GAME,\r\n    UPDATE_CURRENT_LEVEL,\r\n    UPDATE_CURRENT_THEME,\r\n    GAME_ERROR,\r\n    GET_GAMES,\r\n} from '../types';\r\n\r\nconst HistoryState = (props) => {\r\n    // declare initial state\r\n    const initialState = {\r\n        games: [],\r\n        currentLevel: 'beginner',\r\n        currentTheme: 'robots',\r\n        error: null,\r\n    };\r\n\r\n    // declare state and dispatch with usereducer hook\r\n    const [state, dispatch] = useReducer(historyReducer, initialState);\r\n\r\n    // Get games for user\r\n    const getGames = async () => {\r\n        // declare response from backend, dispatch to reducer\r\n        try {\r\n            const res = await axios.get('/api/history');\r\n\r\n            dispatch({\r\n                type: GET_GAMES,\r\n                payload: res.data,\r\n            });\r\n            // dispatch errr msg if found\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GAME_ERROR,\r\n                payload: error.response.msg,\r\n            });\r\n        }\r\n    };\r\n\r\n    // Add game to history\r\n    const addNewGame = async (newGame) => {\r\n        const config = {\r\n            header: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        };\r\n\r\n        try {\r\n            const res = await axios.post('/api/history', newGame, config);\r\n\r\n            dispatch({\r\n                type: ADD_NEW_GAME,\r\n                payload: res.data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: GAME_ERROR,\r\n                payload: error.response.msg,\r\n            });\r\n        }\r\n    };\r\n\r\n    // Delete all games from history\r\n\r\n    // Update currentLevel\r\n    const updateCurrentLevel = (level) => {\r\n        dispatch({ type: UPDATE_CURRENT_LEVEL, payload: level });\r\n    };\r\n\r\n    // Update currentTheme\r\n    const updateCurrentTheme = (theme) => {\r\n        dispatch({ type: UPDATE_CURRENT_THEME, payload: theme });\r\n    };\r\n\r\n    return (\r\n        // return all variables and functions to provider\r\n        <HistoryContext.Provider\r\n            value={{\r\n                games: state.games,\r\n                currentLevel: state.currentLevel,\r\n                currentTheme: state.currentTheme,\r\n                error: state.error,\r\n                updateCurrentLevel,\r\n                updateCurrentTheme,\r\n                addNewGame,\r\n                getGames,\r\n            }}\r\n        >\r\n            {props.children}\r\n        </HistoryContext.Provider>\r\n    );\r\n};\r\n\r\nexport default HistoryState;\r\n","import {\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  REGISTER_SUCCESS,\r\n} from '../types';\r\n\r\n// authReducer returns object state based on the type passed in using a switch\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n        user: null,\r\n        error: action.payload,\r\n      };\r\n    case CLEAR_ERRORS:\r\n      return {\r\n        ...state,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import axios from 'axios';\r\n\r\n// set token for private routes\r\nconst setAuthToken = (token) => {\r\n    if (token) {\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport AuthContext from './authContext';\r\nimport authReducer from './authReducer';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport {\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n  CLEAR_ERRORS,\r\n  REGISTER_SUCCESS,\r\n} from '../types';\r\n\r\nconst AuthState = (props) => {\r\n  // declare inicial state\r\n  const initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null,\r\n    loading: true,\r\n    user: null,\r\n    error: null,\r\n  };\r\n\r\n  // declare state/dispatch with useReducer hook\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Load User\r\n  const loadUser = async () => {\r\n    // check localstorage has a token, setAUthToken if so\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token);\r\n    }\r\n\r\n    // declare response from backend, dispatch data to USER_LOADED\r\n    try {\r\n      const res = await axios.get('/api/auth');\r\n\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n      // dispatch error msg to AUTH_ERROR\r\n    } catch (error) {\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Register User\r\n  const register = async (formData) => {\r\n    // declare config variable with header\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // declare response from backend, post user data\r\n    try {\r\n      const res = await axios.post('/api/users', formData, config);\r\n\r\n      // dispatch data to reducer\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      // load user\r\n      loadUser();\r\n      // dispatch error if found\r\n    } catch (error) {\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Login User\r\n  const login = async (formData) => {\r\n    // declare config variable with header\r\n    const config = {\r\n      header: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    // declare response from post, dispatch to reducer\r\n    try {\r\n      const res = await axios.post('/api/auth', formData, config);\r\n\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n\r\n      loadUser();\r\n      // dispatch error if found\r\n    } catch (error) {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: error.response.data.msg,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: LOGOUT });\r\n  };\r\n\r\n  // Clear Errors\r\n  const clearErrors = () => {\r\n    dispatch({ type: CLEAR_ERRORS });\r\n  };\r\n\r\n  return (\r\n    // return all variables and functions to provider\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        isAuthenticated: state.isAuthenticated,\r\n        loading: state.loading,\r\n        user: state.user,\r\n        error: state.error,\r\n        register,\r\n        clearErrors,\r\n        loadUser,\r\n        login,\r\n        logout,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layouts/Navbar';\nimport Home from './components/pages/Home';\nimport Signin from './components/pages/Signin';\nimport Register from './components/pages/Register';\nimport Game from './components/pages/Game';\nimport PrivateRoute from './components/routing/privateRoute';\n\nimport HistoryState from './context/history/HistoryState';\nimport AuthState from './context/auth/AuthState';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    // auth and history contexts\n    <AuthState>\n      <HistoryState>\n        {/* router for navigation */}\n        <Router>\n          <div className='App'>\n            {/* navbar component */}\n            <Navbar />\n            <div className='Routes'>\n              {/* private/public routes for app */}\n              <Switch>\n                <PrivateRoute exact path='/' component={Home} />\n                <Route exact path='/signin' component={Signin} />\n                <Route exact path='/register' component={Register} />\n                <PrivateRoute exact path='/game' component={Game} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </HistoryState>\n    </AuthState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}